from antlr4 import *
import generator.config as cnf
from generated.MySqlParser import MySqlParser
from generated.MySqlParserListener import MySqlParserListener

import datetime

CPP_HEADER_COMMENT = """/**
* Generated by dataflow generator v.{}
* {}
***
""".format(cnf.version, datetime.date.today().strftime("%d.%m.%Y"))


class MySqlCppListener(MySqlParserListener):
    def __init__(self, output_dir):
        self.output_dir = output_dir
        self.current_output_file = None
        # self.output.write(CPP_HEADER_COMMENT)
        # self.output.write("#pragma once")

    def enterColumnCreateTable(self, ctx:MySqlParser.ColumnCreateTableContext):
        tableName = ctx.tableName().getText().
        print("Entering column create table: {}".format(ctx.tableName().getText()))

    def enterCopyCreateTable(self, ctx:MySqlParser.CopyCreateTableContext):
        print("Entering copy create table")

    def enterQueryCreateTable(self, ctx:MySqlParser.QueryCreateTableContext):
        print("Entering create table: {}".format(ctx.getText()))

    def exitQueryCreateTable(self, ctx:MySqlParser.QueryCreateTableContext):
        print("Exiting create table")

    def enterTableName(self, ctx:MySqlParser.TableNameContext):
        print("Entering table name...")